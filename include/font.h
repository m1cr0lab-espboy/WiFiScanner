/**
 * ----------------------------------------------------------------------------
 * @file   font.h
 * @author Stéphane Calderoni (https://github.com/m1cr0lab)
 * @brief  Toolbox for displaying a custom font
 * ----------------------------------------------------------------------------
 */

#pragma once

#include <ESPboy.h>

uint8_t constexpr FONT_SIZE   = 5;
uint8_t constexpr LINE_HEIGHT = FONT_SIZE * 2;

uint8_t const constexpr FONT[] PROGMEM = {

    0x00, 0x00, 0x00, 0x00, 0x00, // ' '
    0x01, 0x01, 0x01, 0x00, 0x01, // !
    0x05, 0x05, 0x00, 0x00, 0x00, // "
    0x0a, 0x1f, 0x0a, 0x1f, 0x0a, // #
    0x0f, 0x14, 0x0f, 0x05, 0x1e, // $
    0x11, 0x02, 0x04, 0x08, 0x11, // %
    0x0c, 0x12, 0x0c, 0x13, 0x1e, // &
    0x01, 0x01, 0x00, 0x00, 0x00, // '
    0x01, 0x02, 0x02, 0x02, 0x01, // (
    0x02, 0x01, 0x01, 0x01, 0x02, // )
    0x00, 0x05, 0x02, 0x05, 0x00, // *
    0x00, 0x02, 0x07, 0x02, 0x00, // +
    0x00, 0x00, 0x00, 0x01, 0x02, // ,
    0x00, 0x00, 0x07, 0x00, 0x00, // -
    0x00, 0x00, 0x00, 0x00, 0x01, // .
    0x01, 0x02, 0x04, 0x08, 0x10, // /
    0x0f, 0x11, 0x15, 0x11, 0x0e, // 0
    0x03, 0x01, 0x01, 0x01, 0x01, // 1
    0x0e, 0x01, 0x06, 0x08, 0x0f, // 2
    0x0f, 0x01, 0x0e, 0x01, 0x0e, // 3
    0x12, 0x12, 0x12, 0x0f, 0x02, // 4
    0x0f, 0x08, 0x0e, 0x01, 0x0e, // 5
    0x0f, 0x10, 0x1e, 0x11, 0x1e, // 6
    0x1f, 0x11, 0x01, 0x02, 0x04, // 7
    0x0f, 0x11, 0x0e, 0x11, 0x0e, // 8
    0x0f, 0x11, 0x0f, 0x01, 0x0e, // 9
    0x00, 0x01, 0x00, 0x01, 0x00, // :
    0x00, 0x01, 0x00, 0x01, 0x02, // ;
    0x01, 0x02, 0x04, 0x02, 0x01, // <
    0x00, 0x07, 0x00, 0x07, 0x00, // =
    0x04, 0x02, 0x01, 0x02, 0x04, // >
    0x0f, 0x01, 0x06, 0x00, 0x04, // ?
    0x0e, 0x11, 0x17, 0x10, 0x0f, // @
    0x0f, 0x11, 0x11, 0x1f, 0x11, // A
    0x0e, 0x12, 0x1e, 0x11, 0x1e, // B
    0x07, 0x08, 0x08, 0x08, 0x07, // C
    0x0e, 0x11, 0x11, 0x11, 0x1e, // D
    0x07, 0x08, 0x0f, 0x08, 0x0f, // E
    0x07, 0x08, 0x0f, 0x08, 0x08, // F
    0x0f, 0x10, 0x13, 0x11, 0x1e, // G
    0x09, 0x09, 0x0f, 0x09, 0x09, // H
    0x07, 0x02, 0x02, 0x02, 0x07, // I
    0x03, 0x01, 0x01, 0x09, 0x06, // J
    0x09, 0x0a, 0x0e, 0x09, 0x09, // K
    0x08, 0x08, 0x08, 0x08, 0x0f, // L
    0x0b, 0x15, 0x15, 0x15, 0x15, // M
    0x0f, 0x11, 0x11, 0x11, 0x11, // N
    0x0f, 0x11, 0x11, 0x11, 0x0e, // O
    0x0f, 0x11, 0x11, 0x1e, 0x10, // P
    0x0f, 0x11, 0x15, 0x13, 0x0e, // Q
    0x0f, 0x11, 0x11, 0x1e, 0x11, // R
    0x07, 0x08, 0x06, 0x01, 0x0e, // S
    0x1f, 0x04, 0x04, 0x04, 0x04, // T
    0x11, 0x11, 0x11, 0x11, 0x0e, // U
    0x11, 0x11, 0x11, 0x0a, 0x04, // V
    0x15, 0x15, 0x15, 0x15, 0x1a, // W
    0x09, 0x09, 0x06, 0x09, 0x09, // X
    0x11, 0x11, 0x0e, 0x04, 0x04, // Y
    0x0f, 0x01, 0x06, 0x08, 0x0f, // Z
    0x03, 0x02, 0x02, 0x02, 0x03, // [
    0x10, 0x08, 0x04, 0x02, 0x01, // '\'
    0x03, 0x01, 0x01, 0x01, 0x03, // ]
    0x02, 0x05, 0x00, 0x00, 0x00, // ^
    0x00, 0x00, 0x00, 0x00, 0x0f, // _
    0x02, 0x01, 0x00, 0x00, 0x00, // `
    0x0f, 0x11, 0x11, 0x1f, 0x11, // a
    0x0e, 0x12, 0x1e, 0x11, 0x1e, // b
    0x07, 0x08, 0x08, 0x08, 0x07, // c
    0x0e, 0x11, 0x11, 0x11, 0x1e, // d
    0x07, 0x08, 0x0f, 0x08, 0x0f, // e
    0x07, 0x08, 0x0f, 0x08, 0x08, // f
    0x0f, 0x10, 0x13, 0x11, 0x1e, // g
    0x09, 0x09, 0x0f, 0x09, 0x09, // h
    0x07, 0x02, 0x02, 0x02, 0x07, // i
    0x03, 0x01, 0x01, 0x09, 0x06, // j
    0x09, 0x0a, 0x0e, 0x09, 0x09, // k
    0x08, 0x08, 0x08, 0x08, 0x0f, // l
    0x0b, 0x15, 0x15, 0x15, 0x15, // m
    0x0f, 0x11, 0x11, 0x11, 0x11, // n
    0x0f, 0x11, 0x11, 0x11, 0x0e, // o
    0x0f, 0x11, 0x11, 0x1e, 0x10, // p
    0x0f, 0x11, 0x15, 0x13, 0x0e, // q
    0x0f, 0x11, 0x11, 0x1e, 0x11, // r
    0x07, 0x08, 0x06, 0x01, 0x0e, // s
    0x1f, 0x04, 0x04, 0x04, 0x04, // t
    0x11, 0x11, 0x11, 0x11, 0x0e, // u
    0x11, 0x11, 0x11, 0x0a, 0x04, // v
    0x15, 0x15, 0x15, 0x15, 0x1a, // w
    0x09, 0x09, 0x06, 0x09, 0x09, // x
    0x11, 0x11, 0x0e, 0x04, 0x04, // y
    0x0f, 0x01, 0x06, 0x08, 0x0f, // z
    0x03, 0x02, 0x04, 0x02, 0x03, // {
    0x01, 0x01, 0x01, 0x01, 0x01, // |
    0x06, 0x02, 0x01, 0x02, 0x06, // }
    0x00, 0x05, 0x0a, 0x00, 0x00, // ~
    0x00, 0x00, 0x00, 0x00, 0x15  // ... chr(127)
    
};

uint8_t const constexpr FONT_WIDTH[] PROGMEM = {

    2, 1, 3, 5, 5, 5, 5, 1, 2, 2, 3, 3, 2, 3, 1, 5,
    5, 2, 4, 4, 5, 4, 5, 5, 5, 5, 1, 2, 3, 3, 3, 4,
    5, 5, 5, 4, 5, 4, 4, 5, 4, 3, 4, 4, 4, 5, 5, 5,
    5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 4, 2, 5, 2, 3, 4,
    2, 5, 5, 4, 5, 4, 4, 5, 4, 3, 4, 4, 4, 5, 5, 5,
    5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 4, 3, 1, 3, 4, 5

};

enum class Align : uint8_t { LEFT, CENTER, RIGHT };

void drawString(LovyanGFX * const dest, char const * const str, int16_t x, int16_t const y, uint16_t const color = 0xffff, Align const align = Align::LEFT) {

    uint8_t  const n   = strlen(str);
    uint16_t       len = n - 1; // char spacing
    uint8_t        width[n];

    for (uint8_t i = 0; i < n; ++i) {
        uint8_t const c = (str[i] - 32) & 0x7f;
        len += (width[i] = pgm_read_byte(FONT_WIDTH + c));
    }

    switch (align) {
        case Align::CENTER: x -= len >> 1; break;
        case Align::RIGHT:  x -= len;      break;
        default:;
    }

    for (uint8_t i = 0; i < n; ++i) {
        uint8_t const c = (str[i] - 32) & 0x7f;
        uint8_t const w = width[i];
        for (uint8_t j = 0; j < FONT_SIZE; ++j) {
            uint8_t const row = pgm_read_byte(FONT + c * FONT_SIZE + j);
            for (uint8_t k = 0; k < w; ++k) {
                if (row & (1 << k)) dest->drawPixel(x + w - 1 - k, y + j, color);
            }
        }
        x += w + 1;
    }

}

void drawString(LovyanGFX * const dest, __FlashStringHelper const * const str, int16_t x, int16_t const y, uint16_t const color = 0xffff, Align const align = Align::LEFT) {

    uint8_t len = strlen_P((PGM_P)str);
    char    buffer[len + 1];
    strncpy_P(buffer, (PGM_P)str, len + 1);
    drawString(dest, buffer, x, y, color, align);

}

/*
 * ----------------------------------------------------------------------------
 * ESPboy WiFi Scanner
 * ----------------------------------------------------------------------------
 * Copyright (c) 2022 Stéphane Calderoni (https://github.com/m1cr0lab)
 * 
 *     Based on an original idea from tobozo (https://github.com/tobozo)
 *     => https://twitter.com/TobozoTagada/status/1469018514702974981
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 * ----------------------------------------------------------------------------
 */